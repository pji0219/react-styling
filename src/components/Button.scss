$blue: #228be6; // 변수 선언시 앞에 $사인 사용해야됨
$gray: #495057;
$pink: #f06595;

@mixin button-color($color) { // 반복 되는 코드가 있을 때 코드를 줄여주는 용도로 사용
    background: $color; // 파라미터로 받아온 색상을 사용
    &:hover { // & 연산자는 button 자기 자신을 가르키게 됨
        background: lighten($color, 10%); // lighten이라는 함수로 밝기를 조절 가능, 두번째 파라미터에는 얼마나 밝게 할지 지정
    }
    &:active { // 클릭 했을 때
        background: darken($color, 10%);
    }

    &.outline {
        color: $color; // 파라미터로 받아온 색상을 폰트 색상으로 사용
        background: none; // 배경 없앰
        border: 1px solid $color; // 테두리를 파라미터로 받아온 색상으로 사용
        &:hover { // 컴포넌트에 마우스 포인터를 올릴시 (hover할 시)
            background: $color;
            color: white;
        }
    }
}

.Button {
    display: inline-flex;
    align-items: center;   // 텍스트를 버튼의 중앙에 위치 시키게 하는 것들
    justify-content: center;
    color: white;
    font-weight: bold;
    outline: none;
    border: none; // 원래 버튼에는 테두리가 있는데 그것을 없앰
    border-radius: 4px; // 둥글게 하는것
    cursor: pointer; // 커서를 올리면 포인터 모양으로 됨

    &.large {
        height: 3rem;
        padding-left: 1rem;
        padding-right: 1ren;
        font-size: 1rem;
    }

    &.medium {
        height: 2.25rem; // 버튼 크기
        padding-left: 1rem;
        padding-right: 1rem;
        font-size: 1rem; // 크롬 기본 폰트 크기 16px * 1 rem =16px   
    }

    &.small {
        height: 1.75rem;
        font-size: 0.875rem;
        padding-left: 1rem;
        padding-right: 1rem;
    }

    &.blue {
        @include button-color($blue); // mixin 사용할 때 이렇게 하면 된다.
    }

    &.pink {
        @include button-color($pink);
    }

    &.gray{
        @include button-color($gray);
    }
    
    & + & { // 버튼 사이 여백
        margin-left: 1rem;
    }

    &.fullWidth {
        width: 100%;
        justify-content: center; // 중앙 정렬, justify-content는 display-flex를 했을 떄만 사용 가능
        & + & {
           margin-left: 0;
           margin-top: 1rem; 
        }
    }
}